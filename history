;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(file-name-history coding-system-history ido-buffer-history minibuffer-history ido-file-history))
(setq file-name-history '(#("/Users/xiaolin/.emacs.d/init.el" 15 24 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/preparation/view.php" 43 47 (face flx-highlight-face) 49 53 (face flx-highlight-face) 61 67 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/controllers/PreparationController.php" 15 20 (face flx-highlight-face) 21 24 (face flx-highlight-face) 30 35 (face flx-highlight-face) 35 38 (face flx-highlight-face) 43 48 (face flx-highlight-face) 55 58 (face flx-highlight-face)) "~/Documents/markdown/yii2.html" #("/Users/xiaolin/Documents/markdown/yii2.md" 15 19 (face flx-highlight-face) 25 28 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/controllers/WarehouseController.php" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/controllers/LoginController.php" 43 49 (face flx-highlight-face) 55 57 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/models/LoginForm.php" 43 47 (face flx-highlight-face) 50 52 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/controllers/BackendController.php" 43 47 (face flx-highlight-face) 55 62 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/preparation/_view.js" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/controllers/CommonController.php" 43 48 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/acquisition/view.php" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/acquisition/_view.js" 35 39 (face flx-highlight-face) 43 45 (face flx-highlight-face) 49 52 (face flx-highlight-face) 61 66 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/common/libs/myhelper.php" 35 39 (face flx-highlight-face) 42 44 (face flx-highlight-face) 45 46 (face flx-highlight-face) 47 49 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/controllers/AcquisitionController.php" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/common/_add.js" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/common/add.php" 43 47 (face flx-highlight-face) 49 53 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/layouts/left.php" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/layouts/content.php" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/layouts/content-admin.php" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/layouts/main.php" 43 45 (face flx-highlight-face) 49 52 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/controllers/WelcomeController.php" 43 47 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/common/models/View_Tasks_View.php" "/Users/xiaolin/Sites/chinarnd/mrd2/common/models/Task_logs.php" #("/Users/xiaolin/Sites/chinarnd/mrd2/common/models/Dblocation.php" 42 46 (face flx-highlight-face) 49 51 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/preparation/data_inspection.php" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/preparation/_manual_data.js" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/preparation/manual_dataprep.php" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/preparation/_etl_data.js" 49 53 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/preparation/_etl_data.ls" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/preparation/etl_dataprep.php" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/preparation/_data_insp.js" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/preparation/_profile.js" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/preparation/profiling.php" 43 47 (face flx-highlight-face) 49 53 (face flx-highlight-face) 61 63 (face flx-highlight-face) 64 65 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/preparation/_summary.js" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/preparation/summary.php" 43 47 (face flx-highlight-face) 49 50 (face flx-highlight-face) 51 52 (face flx-highlight-face) 54 55 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/rnd/protected/models/Trl_ct_results_outcome_measure_ctgy.php" 60 62 (face flx-highlight-face) 71 72 (face flx-highlight-face) 74 75 (face flx-highlight-face) 76 77 (face flx-highlight-face) 79 80 (face flx-highlight-face) 85 86 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/cro/_view.js" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/qa/_view.js" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/cro/view.php" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/qa/view.php" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/cro/_index.js" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/cro/index.php" 43 47 (face flx-highlight-face) 49 52 (face flx-highlight-face) 53 57 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/controllers/CroController.php" "/Users/xiaolin/Sites/chinarnd/rnd/protected/models/Pub_list_view.php" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/qa/_index.js" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/qa/index.php" 43 47 (face flx-highlight-face) 49 51 (face flx-highlight-face) 52 57 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/controllers/QaController.php" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/backup/log-index.php" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/backup/index.php" 43 47 (face flx-highlight-face) 49 52 (face flx-highlight-face) 56 60 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/controllers/BackupController.php" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/report/log-index.php" 43 47 (face flx-highlight-face) 49 52 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/controllers/ReportController.php" 43 48 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/report/index.php" 49 52 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/warehouse/log-view.php" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/warehouse/log-index.php" 43 47 (face flx-highlight-face) 49 52 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/warehouse/_setup_view.js" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/warehouse/setup-view.php" 43 47 (face flx-highlight-face) 49 52 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/common/models/View_tasks.php" 35 39 (face flx-highlight-face) 42 44 (face flx-highlight-face) 49 57 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/warehouse/index.php" 35 38 (face flx-highlight-face) 43 47 (face flx-highlight-face) 49 52 (face flx-highlight-face) 59 66 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/common/models/Taskitems.php" 35 39 (face flx-highlight-face) 42 46 (face flx-highlight-face) 49 54 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/warehouse/_index.js" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/warehousing/_index.js" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/warehousing/index.php" 43 47 (face flx-highlight-face) 49 52 (face flx-highlight-face) 61 65 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/controllers/WarehousingController.php" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/assets/AppAsset.php" 43 46 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/common/models/Task_personnel.php" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/acquisition/_index.js" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/acquisition/index.php" 43 47 (face flx-highlight-face) 49 52 (face flx-highlight-face) 61 68 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/calendar/detail.php" 49 52 (face flx-highlight-face) 58 61 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/tasks/index.php" 49 52 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/welcome/error.php" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/welcome/index.php" 49 52 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/data/index.php" 49 52 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/common/libs/myHelpers.php" 35 39 (face flx-highlight-face) 42 44 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/calendar/_calendar.js" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/calendar/_index.js" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/models/Personnel.php" 43 45 (face flx-highlight-face) 50 53 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/calendar/index.php" 43 47 (face flx-highlight-face) 49 52 (face flx-highlight-face) 58 60 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/controllers/CalendarController.php" 35 38 (face flx-highlight-face) 43 48 (face flx-highlight-face) 55 58 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/controllers/DataController.php" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/controllers/TasksController.php" 15 17 (face flx-highlight-face) 21 24 (face flx-highlight-face) 30 35 (face flx-highlight-face) 35 38 (face flx-highlight-face) 43 48 (face flx-highlight-face) 55 58 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/data/_index.js" "/Users/xiaolin/Sites/chinarnd/rnd/public/admin/js/site_index.js" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/config/main.php" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/config/main-local.php" 43 47 (face flx-highlight-face) 50 55 (face flx-highlight-face)) "~/Documents/markdown/yii2.html" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/welcome/_form-wizard.js" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/welcome/_js.js" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/controllers/SiteController.php" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/layouts/header.php" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/web/vendors/css/customs.css" 43 46 (face flx-highlight-face) 47 50 (face flx-highlight-face) 55 58 (face flx-highlight-face) 59 62 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/web/vendors/js/yii2.js" 43 46 (face flx-highlight-face) 47 50 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/web/vendors/js/jquery-lib.js" 43 46 (face flx-highlight-face) 47 51 (face flx-highlight-face) 55 57 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/.bowerrc" 38 40 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/common/config/main-local.php" 35 39 (face flx-highlight-face) 42 44 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/frontend/config/main-local.php" #("/Users/xiaolin/Sites/chinarnd/mrd2/frontend/config/main.php" 35 37 (face flx-highlight-face) 44 48 (face flx-highlight-face)) "~/Sites/chinarnd/mrd2/backend/config/main.php" "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/layouts/main-login.php" #("/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/login/login.php" 49 55 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/mrd2/common/config/main.php" 35 39 (face flx-highlight-face) 42 47 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/mrd2/backend/views/layouts/js.php" "/Users/xiaolin/Sites/tmp/yii2/backend/controllers/WelcomeController.php" #("/Users/xiaolin/Sites/tmp/yii2/backend/controllers/UserSearch.php" 38 43 (face flx-highlight-face) 50 55 (face flx-highlight-face)) "/Users/xiaolin/Sites/tmp/yii2/backend/views/layouts/main.php" "/Users/xiaolin/Sites/tmp/yii2/backend/controllers/NewsController.php" #("/Users/xiaolin/Sites/tmp/yii2/backend/controllers/UserController.php" 38 43 (face flx-highlight-face) 50 55 (face flx-highlight-face)) "~/Documents/markdown/yii2.html" #("/Users/xiaolin/Sites/tmp/yii2/backend/views/layouts/left.php" 38 42 (face flx-highlight-face) 52 54 (face flx-highlight-face)) #("/Users/xiaolin/Sites/tmp/yii2/backend/views/welcome/index.php" 44 46 (face flx-highlight-face) 52 55 (face flx-highlight-face)) "/Users/xiaolin/Sites/tmp/yii2/backend/config/main-local.php" #("/Users/xiaolin/Sites/tmp/yii2/backend/config/main.php" 21 25 (face flx-highlight-face) 25 26 (face flx-highlight-face) 30 33 (face flx-highlight-face) 38 42 (face flx-highlight-face)) "/Users/xiaolin/Sites/tmp/yii2/backend/views/layouts/content.php" #("/Users/xiaolin/Sites/tmp/yii2/backend/views/layouts/header.php" 38 42 (face flx-highlight-face) 52 56 (face flx-highlight-face)) #("/Users/xiaolin/Sites/tmp/yii2/backend/web/.htaccess" 38 40 (face flx-highlight-face)) #("/Users/xiaolin/Sites/tmp/yii2/backend/views/site/index.php" 38 42 (face flx-highlight-face) 44 46 (face flx-highlight-face)) "/Users/xiaolin/Sites/tmp/yii2/backend/controllers/SiteController.php" #("/Users/xiaolin/Sites/tmp/yii2/frontend/views/site/index.php" 39 43 (face flx-highlight-face) 45 46 (face flx-highlight-face) 47 48 (face flx-highlight-face) 50 52 (face flx-highlight-face)) #("/Users/xiaolin/Sites/tmp/yii2/common/messages/en-us/app.php" 46 48 (face flx-highlight-face)) #("/Users/xiaolin/Sites/tmp/yii2/common/messages/zh-cn/app.php" 30 34 (face flx-highlight-face) 37 46 (face flx-highlight-face) 46 47 (face flx-highlight-face) 52 53 (face flx-highlight-face)) #("/Users/xiaolin/Sites/tmp/yii2/common/messages/zh-CN/app.php" 46 47 (face flx-highlight-face)) #("/Users/xiaolin/Sites/tmp/yii2/common/messages/en-US/app.php" 30 34 (face flx-highlight-face) 37 41 (face flx-highlight-face) 46 49 (face flx-highlight-face)) #("/Users/xiaolin/Sites/tmp/yii2/frontend/config/main-local.php" 30 32 (face flx-highlight-face) 39 43 (face flx-highlight-face)) #("/Users/xiaolin/Sites/tmp/yii2/common/config/main-local.php" 30 34 (face flx-highlight-face) 37 39 (face flx-highlight-face) 40 42 (face flx-highlight-face) 44 50 (face flx-highlight-face)) "/Users/xiaolin/Sites/tmp/yii2/frontend/controllers/SiteController.php" #("/Users/xiaolin/Sites/tmp/yii2/frontend/controllers/BaseController.php" 15 19 (face flx-highlight-face) 21 25 (face flx-highlight-face) 25 26 (face flx-highlight-face) 30 34 (face flx-highlight-face) 39 44 (face flx-highlight-face) 51 54 (face flx-highlight-face)) "/Users/xiaolin/Sites/tmp/yii2/common/config/bootstrap.php" "/Users/xiaolin/Sites/tmp/yii2/common/config/params-local.php" "/Users/xiaolin/Sites/tmp/yii2/common/config/main.php" #("/Users/xiaolin/Sites/tmp/yii2/messages/en-US/app.php" 39 41 (face flx-highlight-face)) #("/Users/xiaolin/Sites/tmp/yii2/messages/zh-CN/app.php" 30 34 (face flx-highlight-face) 39 40 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/rnd/protected/models/Phmdrg_approved.php" #("/Users/xiaolin/Sites/tmp/yii2/frontend/views/site/country.php" 39 43 (face flx-highlight-face) 45 49 (face flx-highlight-face)) #("/Users/xiaolin/Sites/tmp/yii2/common/models/Country.php" 30 34 (face flx-highlight-face) 37 41 (face flx-highlight-face) 44 46 (face flx-highlight-face)) "/Users/xiaolin/Sites/tmp/yii2/backend/views/rbac/_itemChildForm.php" "/Users/xiaolin/Sites/tmp/yii2/backend/views/rbac/itemIndex.php" #("/Users/xiaolin/Sites/tmp/yii2/backend/views/rbac/_itemform.php" 38 42 (face flx-highlight-face) 44 45 (face flx-highlight-face) 46 47 (face flx-highlight-face)) "/Users/xiaolin/Sites/tmp/yii2/backend/controllers/RbacController.php" #("/Users/xiaolin/Sites/tmp/yii2/backend/models/Rbac.php" 38 41 (face flx-highlight-face)) #("/Users/xiaolin/Sites/tmp/yii2/common/libs/Tools.php" 30 34 (face flx-highlight-face) 37 39 (face flx-highlight-face) 40 41 (face flx-highlight-face) 42 44 (face flx-highlight-face)) "/Users/xiaolin/Sites/tmp/yii2/frontend/config/params-local.php" "/Users/xiaolin/Sites/tmp/yii2/frontend/config/params.php" "/Users/xiaolin/Sites/tmp/yii2/frontend/config/bootstrap.php" "/Users/xiaolin/Sites/tmp/yii2/frontend/config/main.php" #("/Users/xiaolin/Sites/tmp/yii2/libs/Tools.php" 30 33 (face flx-highlight-face)) #("/Users/xiaolin/Sites/tmp/yii2/common/mail/email.php" 30 34 (face flx-highlight-face) 37 39 (face flx-highlight-face)) #("/Users/xiaolin/Sites/tmp/yii2/frontend/views/site/email.php" 39 43 (face flx-highlight-face) 45 47 (face flx-highlight-face)) #("/Users/xiaolin/Sites/tmp/yii2/frontend/views/layouts/main.php" 39 42 (face flx-highlight-face) 45 48 (face flx-highlight-face) 53 57 (face flx-highlight-face)) "/Users/xiaolin/Sites/tmp/yii2/frontend/controllers/WelcomeController.php" #("/Users/xiaolin/Sites/tmp/yii2/frontend/views/site/entry.php" 39 43 (face flx-highlight-face) 45 47 (face flx-highlight-face) 50 52 (face flx-highlight-face)) #("/Users/xiaolin/Sites/tmp/yii2/frontend/views/entry.php" 39 43 (face flx-highlight-face)) "/Users/xiaolin/Sites/tmp/yii2/frontend/models/EntryForm.php" "/Users/xiaolin/Sites/tmp/yii2/frontend/models/ContactForm.php" "~/Downloads/Emacs-master/config/python-mode-config.el" "/Users/xiaolin/Sites/chinarnd/rnd/protected/controllers/IndexController.php" #("/Users/xiaolin/Sites/tmp/yii2/frontend/web/index.php" 15 19 (face flx-highlight-face) 21 25 (face flx-highlight-face) 25 26 (face flx-highlight-face) 30 35 (face flx-highlight-face) 39 42 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/rnd/protected/views/drug/drug_single.php" 50 55 (face flx-highlight-face)) "~/Documents/markdown/c++.html" "/Users/xiaolin/Documents/markdown/markdown.css" #("/Users/xiaolin/Documents/markdown/c++.md" 15 18 (face flx-highlight-face) 25 28 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/rnd/protected/views/pharma/pharma_index.php" #("/Users/xiaolin/Sites/chinarnd/rnd/protected/views/pharma/pharma_single.php" 44 47 (face flx-highlight-face) 50 57 (face flx-highlight-face) 57 66 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/rnd/protected/controllers/PharmaController.php" 15 19 (face flx-highlight-face) 21 24 (face flx-highlight-face) 30 34 (face flx-highlight-face) 34 36 (face flx-highlight-face) 44 49 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/rnd/public/admin/js/mrd_common.js" 34 37 (face flx-highlight-face) 41 46 (face flx-highlight-face) 47 49 (face flx-highlight-face) 50 55 (face flx-highlight-face)) "~/.emacs.d/games/snake-scores" #("/Users/xiaolin/Sites/chinarnd/rnd/protected/views/investigator/inv_list.php" 44 48 (face flx-highlight-face) 50 63 (face flx-highlight-face) 63 70 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/rnd/protected/views/investigator/inv_single.php" "/Users/xiaolin/Sites/chinarnd/rnd/protected/views/investigator/inv_compare.php" #("/Users/xiaolin/Sites/chinarnd/rnd/protected/controllers/InvestigatorController.php" 44 49 (face flx-highlight-face)) #("/Users/xiaolin/Documents/python3/fun.py" 25 32 (face flx-highlight-face) 33 36 (face flx-highlight-face)) #("/Users/xiaolin/Documents/c-c++/char1.c" 15 19 (face flx-highlight-face) 25 27 (face flx-highlight-face) 31 37 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/rnd/protected/controllers/SiteController.php" 34 37 (face flx-highlight-face) 44 49 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/rnd/protected/views/site/site_list.php" "/Users/xiaolin/Sites/chinarnd/rnd/protected/views/site/site_single.php" #("/Users/xiaolin/Sites/chinarnd/rnd/protected/views/site/site_compare.php" 15 19 (face flx-highlight-face) 21 24 (face flx-highlight-face) 30 34 (face flx-highlight-face) 34 37 (face flx-highlight-face) 44 48 (face flx-highlight-face) 50 55 (face flx-highlight-face) 55 63 (face flx-highlight-face)) "/Users/xiaolin/.emacs.d/lisp/init-web-mode-old.el" #("/Users/xiaolin/.emacs.d/lisp/init-web-mode.el" 15 24 (face flx-highlight-face) 24 29 (face flx-highlight-face)) "/Users/xiaolin/.emacs.d/init-web-mode.el" "/Users/xiaolin/Sites/chinarnd/rnd/protected/views/registration/reg_compare.php" #("/Users/xiaolin/Sites/chinarnd/rnd/protected/views/registration/reg_single.php" 44 48 (face flx-highlight-face) 50 63 (face flx-highlight-face)) #("/Users/xiaolin/Sites/chinarnd/rnd/protected/controllers/RegistrationController.php" 15 19 (face flx-highlight-face) 21 24 (face flx-highlight-face) 30 34 (face flx-highlight-face) 34 36 (face flx-highlight-face) 44 49 (face flx-highlight-face)) "/Users/xiaolin/Sites/chinarnd/rnd/protected/views/registration/reg_list.php"))
(setq coding-system-history '("utf-8" "utf-8-mac"))
(setq ido-buffer-history '("bbdb"))
(setq minibuffer-history '("php-mode" "web-mode" "yas-new-snippet" "yas-insert-snippet" "elpy-shell-switch-to-shell" "snake" "lin_hailing@sina.com" "message-resend" "message-mail" "meW" "emment-mode" "html5" "web-mode-reload" "nxml-mode" "describe-coding-system" "revert-buffer-with-coding-system" "ebrowse-member-mode" "bbdb"))
(setq ido-file-history '("init.el" #("view.php" 0 6 (face flx-highlight-face)) #("PreparationController.php" 0 3 (face flx-highlight-face)) "yii2.md" "WarehouseController.php" #("LoginController.php" 0 2 (face flx-highlight-face)) #("LoginForm.php" 0 2 (face flx-highlight-face)) #("BackendController.php" 0 7 (face flx-highlight-face)) "_view.js" "CommonController.php" #("myhelper.php" 0 2 (face flx-highlight-face)) "AcquisitionController.php" "_add.js" "add.php" "left.php" "content.php" "content-admin.php" "main.php" "WelcomeController.php" "View_Tasks_View.php" "Task_logs.php" #("Dblocation.php" 0 2 (face flx-highlight-face)) "data_inspection.php" "_manual_data.js" "manual_dataprep.php" "_etl_data.js" "_etl_data.ls" "etl_dataprep.php" "_data_insp.js" "_profile.js" #("profiling.php" 0 2 (face flx-highlight-face) 3 4 (face flx-highlight-face)) "_summary.js" "summary.php" #("Trl_ct_results_outcome_measure_ctgy.php" 9 11 (face flx-highlight-face) 20 21 (face flx-highlight-face) 23 24 (face flx-highlight-face) 25 26 (face flx-highlight-face) 28 29 (face flx-highlight-face) 34 35 (face flx-highlight-face)) "_index.js" #("index.php" 0 4 (face flx-highlight-face)) "CroController.php" "Pub_list_view.php" "QaController.php" "log-index.php" "BackupController.php" "ReportController.php" "log-view.php" "_setup_view.js" "setup-view.php" #("View_tasks.php" 0 8 (face flx-highlight-face)) #("Taskitems.php" 0 5 (face flx-highlight-face)) "WarehousingController.php" "AppAsset.php" "Task_personnel.php" #("detail.php" 0 3 (face flx-highlight-face)) "error.php" "myHelpers.php" "_calendar.js" #("Personnel.php" 0 3 (face flx-highlight-face)) #("CalendarController.php" 0 3 (face flx-highlight-face)) "DataController.php" #("TasksController.php" 0 3 (face flx-highlight-face)) "site_index.js" #("main-local.php" 0 5 (face flx-highlight-face)) "_form-wizard.js" "_js.js" "SiteController.php" "header.php" #("customs.css" 0 3 (face flx-highlight-face)) "yii2.js" "jquery-lib.js" #(".bowerrc" 3 5 (face flx-highlight-face)) #("config/" 0 4 (face flx-highlight-face)) "main-login.php" "login.php" "js.php" #("UserSearch.php" 0 5 (face flx-highlight-face)) "NewsController.php" #("UserController.php" 0 5 (face flx-highlight-face)) ".htaccess" "app.php" #("BaseController.php" 0 3 (face flx-highlight-face)) "bootstrap.php" "params-local.php" "Phmdrg_approved.php" "country.php" #("Country.php" 0 2 (face flx-highlight-face)) "_itemChildForm.php" "itemIndex.php" "_itemform.php" "RbacController.php" "Rbac.php" #("Tools.php" 0 2 (face flx-highlight-face)) "params.php" "email.php" "entry.php" "EntryForm.php" "ContactForm.php" "IndexController.php" "drug_single.php" "markdown.css" "c++.md" "pharma_index.php" #("pharma_single.php" 0 9 (face flx-highlight-face)) "PharmaController.php" #("mrd_common.js" 0 5 (face flx-highlight-face)) #("inv_list.php" 0 7 (face flx-highlight-face)) "inv_single.php" "inv_compare.php" "InvestigatorController.php" #("fun.py" 0 3 (face flx-highlight-face)) #("char1.c" 0 6 (face flx-highlight-face)) "site_list.php" "site_single.php" #("site_compare.php" 0 8 (face flx-highlight-face)) "init-web-mode-old.el" "init-web-mode.el" "reg_compare.php" "reg_single.php" "RegistrationController.php" "reg_list.php"))
(setq search-ring 'nil)
(setq regexp-search-ring '("Utable" "step4" "Ui" "Task_logs" "i" "\\_<>\\_>"))
(setq kill-ring '("在上面的代码中，先是获取一个 yii\\db\\Transaction 对象，之后执行若干SQL 语句，然后调用之前 Transaction 对象的 commit() 方法。这一过程中， 如果捕获了异常，那么调用 rollBack() 进行回滚。" "$transaction = $connection->beginTransaction();
try {
    $connection->createCommand($sql1)->execute();
    $connection->createCommand($sql2)->execute();
    // ... executing other SQL statements ...
    $transaction->commit();
} catch (Exception $e) {
    $transaction->rollBack();
}" "在Yii中，使用 yii\\db\\Transaction 来表示数据库事务。

一般情况下，我们从数据库连接启用事务，通常采用如下的形式:" "事务（Transaction）" #("\"task_logs\",$task_logs" 0 11 (fontified t face font-lock-string-face) 11 12 (fontified t) 12 13 (fontified t face default) 13 22 (fontified t face font-lock-variable-name-face)) #("$id_tasklog" 0 1 (c-is-sws t fontified t face default) 1 11 (fontified t face font-lock-variable-name-face)) #("$t,$newArr" 0 1 (fontified t face default) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t) 3 4 (fontified t face default) 4 10 (fontified t face font-lock-variable-name-face)) #("$id" 0 1 (fontified t face default) 1 3 (fontified t face font-lock-variable-name-face)) #("$k" 0 1 (fontified t face default) 1 2 (fontified t face font-lock-variable-name-face)) #(" $t,$newArr," 0 1 (fontified t) 1 2 (fontified t face default) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t) 4 5 (fontified t face default) 5 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t)) #("$transaction = Yii::$app->db->beginTransaction();" 0 1 (block-side t fontified t face default) 1 12 (block-side t fontified t face font-lock-variable-name-face) 12 15 (block-side t fontified t) 15 18 (block-side t fontified t face font-lock-constant-face) 18 20 (block-side t fontified t) 20 21 (block-side t fontified t face default) 21 24 (block-side t fontified t face font-lock-variable-name-face) 24 26 (block-side t fontified t) 26 28 (block-side t fontified t face font-lock-variable-name-face) 28 30 (block-side t fontified t) 30 46 (block-side t fontified t face default) 46 48 (block-side t fontified t) 48 49 (block-side t rear-nonsticky t fontified t)) "/***
      * 功能：修改数据表中得数据task_personnel
      * @params array
      * @return false/true
      * @author henry
      */
     public static function ManyU( $arr ){
                        $db = Yii::app(  )->db;
                        $transaction = $db->beginTransaction(  );
                        $command = $db->createCommand(  );
                        $newArr = array(  );
                        try{
                             if( !empty( $arr ) ){
                                  foreach( $arr as $key=>$values ){
                                       if( !empty( $values ) ){
                                            $command->reset(  );
                                            foreach( $values as $keys=>$val ){
                                                 if( !empty( $val ) && $val==\"on\"){
                                                      $newArr[ $keys ] = 1;
                                                 }else{
                                                      $newArr[ $keys ] = $val;
                                                 }
                                            }
                                            $k = $newArr[ 'key' ];
                                            unset( $newArr[ 'key' ] );
                                            $t = $newArr[ 'table' ];
                                            unset( $newArr[ 'table' ] );
                                            if( !empty( $newArr[ 'id' ] ) ){
                                                 $id = $newArr[ 'id' ];
                                                 unset( $newArr[ 'id' ] );
                                            }
                                            $flag = $newArr[ 'flag' ];
                                            unset( $newArr[ 'flag' ] );

                                            if( !empty( $flag ) && $flag==\"update\"){
                                                 $newArr[ $k ] = $id;
                                                 $command->update( $t,$newArr,\" `\".$k.\"` = :id \",[ ':id'=>$id] );
                                            }else if( !empty( $flag ) && $flag==\"add\" ){
                                                  $command->insert( $t,$newArr );
                                                  $id_tasklog = Yii::app()->db->getLastInsertID();
                                                  $task_logs[ 'id_task' ] = $id_tasklog;
                                                  $command->reset(  );
                                                  $command->insert( \"task_logs\",$task_logs );
                                            }
                                            $newArr = array(  );
                                            $k = \"\";
                                            $t = \"\";
                                            $id = \"\";
                                            $flag = \"\";
                                       }
                                  }
                             }
                             $transaction->commit(  );
                             return true;
                        }catch( Excepttion $e ){
                             $transaction->rollback(  );
                             return false;
                        }
                   }" #("ManyU" 0 5 (fontified t)) #("myhelper" 0 8 (block-side t invisible nil fontified t face font-lock-constant-face)) "setupview" #("public $enableCsrfValidation = false;" 0 6 (block-side t fontified t face font-lock-keyword-face) 6 7 (block-side t fontified t) 7 8 (block-side t fontified t face default) 8 28 (block-side t fontified t face font-lock-variable-name-face) 28 31 (block-side t fontified t) 31 36 (block-side t fontified t face font-lock-constant-face) 36 37 (block-side t fontified t rear-nonsticky t)) #("public $enableCsrfValidation = false;" 0 6 (block-side t fontified t face font-lock-keyword-face) 6 7 (block-side t fontified t) 7 8 (block-side t fontified t face default) 8 28 (block-side t fontified t face font-lock-variable-name-face) 28 31 (block-side t fontified t) 31 36 (block-side t fontified t face font-lock-constant-face) 36 37 (block-side t fontified t rear-nonsticky t)) #(" = false;" 0 3 (block-side t fontified t) 3 8 (block-side t fontified t face font-lock-constant-face) 8 9 (block-side t fontified t rear-nonsticky t)) " /***
      * action operaction
      * 修改数据
      */
     public function actionOperaction(  ){
                 $id = isset( $_REQUEST[ 'id' ] ) ? $_REQUEST[ 'id' ] : \"\";
                 if( empty( $id )  ){
                      Yii::app()->user->setFlash('error','数据操作有问题，联系管理员！');
                      $this->redirect( array(\"warehouse/setupsingle\",\"id\"=>$id) );
                      exit(  );
                 }
                 $task_setup = array(  );
                 $taskSetupNew = array(  );
                 if( isset( $_POST[ 'Task_setup' ] ) ){
                      $task_setup = $_POST[ 'Task_setup' ];
                      
                      if( !empty( $task_setup ) ){
                           foreach( $task_setup as $key=>$setup ){
                                if( !empty( $setup[ 'update' ][ 0 ][ 'id_dblocation' ]) ){
                                     $task_setup[ $key ][ 'task_description' ] = serialize( $setup[ 'update' ] );
                                }
                                unset( $task_setup[ $key ][ 'update' ] );
                           }
                           //判断是否存在task_description键，并且不能为空
                           if( !empty($task_setup) ){
                                foreach( $task_setup as $tsKey=>$ts ){
                                     if( array_key_exists( \"task_description\" ,$ts)  && $ts[ 'task_description' ] !=\"\"){
                                          $taskSetupNew[ $tsKey ] = $ts;
                                     }
                                }
                           }
                      }
                 }
                 //echo \"<pre>\";
                 //var_dump( $taskSetupNew );
                 //exit(  );
                 $task_logs = array(  );
                 if( isset( $_POST[ 'Task_logs' ] ) ){
                      $task_logs = $_POST[ 'Task_logs' ];
                      if( !empty( $task_logs ) ){
                           foreach( $task_logs as $key=>$setup ){
                                if( !empty( $setup[ 'update' ] ) ){
                                     $task_logs[ $key ][ 'task_summary' ] = serialize( $setup[ 'update' ] );
                                }else{
                                     $task_logs[ $key ][ 'task_summary' ] = \"\";
                                }
                                 unset( $task_logs[ $key ][ 'update' ] );
                           }
                      }
                 }
                 //echo \"<pre>\";
                 //var_dump($task_setup  );
                 //echo \"task_logs:\";
                 //var_dump( $task_logs );
                 //exit(  );
                 if( !empty( $task_logs ) && HenryHelper::ManyU( $task_logs ) ){
                      Yii::app()->user->setFlash('success','数据操作成功！');
                      $this->redirect( array(\"warehouse/setupsingle\",\"id\"=>$id) );
                      exit(  );
                 }
                 if( !empty( $taskSetupNew ) && HenryHelper::ManyU( $taskSetupNew ) ){
                      Yii::app()->user->setFlash('success','数据操作成功！');
                      $this->redirect( array(\"warehouse/setupsingle\",\"id\"=>$id) );
                      exit(  );
                 }
                 Yii::app()->user->setFlash('error','数据操作有问题，联系管理员！');
                 $this->redirect( array(\"warehouse/setupsingle\",\"id\"=>$id) );
                 exit(  );
            }" #("$arr3[ $keys ][ 'key' ]" 0 1 (fontified t face default) 1 5 (fontified t face font-lock-variable-name-face) 5 7 (fontified t) 7 8 (fontified t face default) 8 12 (fontified t face font-lock-variable-name-face) 12 16 (fontified t) 16 21 (fontified t face font-lock-string-face) 21 23 (fontified t)) #("$arr3[ $keys ][ 'id' ]" 0 1 (fontified t face default) 1 5 (fontified t face font-lock-variable-name-face) 5 7 (fontified t) 7 8 (fontified t face default) 8 12 (fontified t face font-lock-variable-name-face) 12 16 (fontified t) 16 20 (fontified t face font-lock-string-face) 20 22 (fontified t)) #("3[ $keys ][ 'key' ]" 0 1 (fontified t face font-lock-variable-name-face) 1 3 (fontified t) 3 4 (fontified t face default) 4 8 (fontified t face font-lock-variable-name-face) 8 12 (fontified t) 12 17 (fontified t face font-lock-string-face) 17 19 (fontified t)) #("$arr3[ $keys ][ 'table' ],$arrNew3," 0 1 (fontified t face default) 1 5 (fontified t face font-lock-variable-name-face) 5 7 (fontified t) 7 8 (fontified t face default) 8 12 (fontified t face font-lock-variable-name-face) 12 16 (fontified t) 16 23 (fontified t face font-lock-string-face) 23 26 (fontified t) 26 27 (fontified t face default) 27 34 (fontified t face font-lock-variable-name-face) 34 35 (fontified t)) #("$arrNew2[ 'id' ]" 0 1 (fontified t face default) 1 8 (fontified t face font-lock-variable-name-face) 8 10 (fontified t) 10 14 (fontified t face font-lock-string-face) 14 16 (fontified t)) #("id" 0 2 (fontified t face font-lock-string-face)) #("$oldArr2[ 'table' ],$arrNew2" 0 1 (fontified t face default) 1 8 (fontified t face font-lock-variable-name-face) 8 10 (fontified t) 10 17 (fontified t face font-lock-string-face) 17 20 (fontified t) 20 21 (fontified t face default) 21 28 (fontified t face font-lock-variable-name-face)) #("$arr[ $keys ][ 'id' ]" 0 1 (fontified t face default) 1 4 (fontified t face font-lock-variable-name-face) 4 6 (fontified t) 6 7 (fontified t face default) 7 11 (fontified t face font-lock-variable-name-face) 11 15 (fontified t) 15 19 (fontified t face font-lock-string-face) 19 21 (fontified t)) #("$arr[ $keys ][ 'key' ]" 0 1 (fontified t face default) 1 4 (fontified t face font-lock-variable-name-face) 4 6 (fontified t) 6 7 (fontified t face default) 7 11 (fontified t face font-lock-variable-name-face) 11 15 (fontified t) 15 20 (fontified t face font-lock-string-face) 20 22 (fontified t)) #("$arr[ $keys ][ 'table' ],$arrNew," 0 1 (fontified t face default) 1 4 (fontified t face font-lock-variable-name-face) 4 6 (fontified t) 6 7 (fontified t face default) 7 11 (fontified t face font-lock-variable-name-face) 11 15 (fontified t) 15 22 (fontified t face font-lock-string-face) 22 25 (fontified t) 25 26 (fontified t face default) 26 32 (fontified t face font-lock-variable-name-face) 32 33 (fontified t)) #("$transaction" 0 1 (block-side t fontified t face default) 1 12 (block-side t fontified t face font-lock-variable-name-face)) #("$transaction = Yii::$app->db->beginTransaction();" 0 1 (block-side t fontified t face default) 1 12 (block-side t fontified t face font-lock-variable-name-face) 12 15 (block-side t fontified t) 15 18 (block-side t fontified t face font-lock-constant-face) 18 20 (block-side t fontified t) 20 21 (block-side t fontified t face default) 21 24 (block-side t fontified t face font-lock-variable-name-face) 24 26 (block-side t fontified t) 26 28 (block-side t fontified t face font-lock-variable-name-face) 28 30 (block-side t fontified t) 30 46 (block-side t fontified t face default) 46 48 (block-side t fontified t) 48 49 (block-side t rear-nonsticky t fontified t)) " /**
      * 功能：修改多个表的多维数组
      * @params two array
      * @return false/true
      * @author henry
      * @time 2016年02月26日10:57:05
      */
     public static function updateManyTableArray( $arr,$arr2,$arr3 ){
                        $db = Yii::app(  )->db;
                        $transaction = $db->beginTransaction(  );
                        $command = $db->createCommand(  );
                        $arrNew = array(  );
                        $arrNew2 = array(  );
                        $arrNew3 = array(  );
                        $oldArr2 = $arr2;
                        try{
                             if( !empty( $arr ) ){
                                  foreach( $arr as $keys=>$values ){
                                       $command->reset(  );
                                       if( !empty($values) && is_array( $values ) ){
                                            foreach( $values as $key=>$vals ){
                                                 $arrNew[ $key ] = $vals;
                                                 $arrNew[ $arr[ $keys ][ 'key' ] ] = $arr[ $keys ][ 'id' ];
                                            }
                                            if( !empty( $arrNew[ 'key' ] ) ){
                                                 unset( $arrNew[ 'key' ] );
                                            }
                                            if( !empty( $arrNew[ 'table' ] ) ){
                                                 unset( $arrNew[ 'table' ] );
                                            }
                                            if( !empty( $arrNew[ 'id' ] ) ){
                                                 unset( $arrNew[ 'id' ] );
                                            }
                                            //update
                                            if( !empty( $arrNew ) ){
                                                 $command->update( $arr[ $keys ][ 'table' ],$arrNew,\" `\".$arr[ $keys ][ 'key' ].\"` = :id\",[ ':id'=>$arr[ $keys ][ 'id' ]] );
                                            }
                                            $arrNew = array(  );
                                       }else{
                                            $arrNew[ $keys ] = $values;
                                       }
                                  }
                             }
                             //arr2
                             if( !empty( $arr2 ) ){
                                  unset( $arr2[ 'table' ] );
                                  foreach( $arr2 as $key=>$values ){
                                       if( !empty( $values ) ){
                                            $command->reset(  );
                                            foreach( $values as $keys=>$val ){
                                                 if( !empty( $val ) && $val==\"on\"){
                                                      $arrNew2[ $keys ] = 1;
                                                 }else{
                                                      $arrNew2[ $keys ] = $val;
                                                 }

                                            }
                                            $command->update( $oldArr2[ 'table' ],$arrNew2,\" `id` = :id and `id_tasklog` = :id_tasklog\",[ ':id'=>$arrNew2[ 'id' ],':id_tasklog'=>$arrNew2[ 'id_tasklog' ]] );
                                            $arrNew2 = array(  );
                                       }
                                  }
                             }
                             //arr3
                             if( !empty( $arr3 ) ){
                                  foreach( $arr3 as $keys=>$values ){
                                       $command->reset(  );
                                       if( !empty($values) && is_array( $values ) ){
                                            foreach( $values as $key=>$vals ){
                                                 $arrNew3[ $key ] = $vals;
                                                 $arrNew3[ $arr[ $keys ][ 'key' ] ] = $arr[ $keys ][ 'id' ];
                                            }
                                            if( !empty( $arrNew3[ 'key' ] ) ){
                                                 unset( $arrNew3[ 'key' ] );
                                            }
                                            if( !empty( $arrNew3[ 'table' ] ) ){
                                                 unset( $arrNew3[ 'table' ] );
                                            }
                                            if( !empty( $arrNew3[ 'id' ] ) ){
                                                 unset( $arrNew3[ 'id' ] );
                                            }
                                            //update
                                            if( !empty( $arrNew3 ) ){
                                                 $command->update( $arr3[ $keys ][ 'table' ],$arrNew3,\" `\".$arr3[ $keys ][ 'key' ].\"` = :id\",[ ':id'=>$arr3[ $keys ][ 'id' ]] );
                                            }
                                            $arrNew3 = array(  );
                                       }else{
                                            $arrNew3[ $keys ] = $values;
                                       }
                                  }
                             }
                             $transaction->commit(  );
                             return true;
                        }catch( Exception $e ){
                             $transaction->rollback(  );
                             return false;
                        }
                   }" #("updateManyTableArray" 0 20 (fontified t)) #("myhelper" 0 7 (block-side t fontified t face font-lock-constant-face) 7 8 (block-side t rear-nonsticky t fontified t face font-lock-constant-face)) #("return" 0 6 (fontified t face font-lock-keyword-face)) "/***
     * 功能：修改表task_personnel的数据
     * @params post
     * @return false,true
     * @author henry
     */
    public function actionUpdatetaskpersonnel() {
        $root = isset($_REQUEST['rootId']) ? $_REQUEST['rootId'] : \"\";
        $step = isset($_REQUEST['step']) ? $_REQUEST['step'] : \"\";
        if (empty($root) && empty($step)) {
            Yii::app()->user->setFlash('error', '数据存在问题，联系管理员！');
            $this->redirect(array(\"preparation/index\"));
            exit();
        }
        $endResults = array();
        $task_personnel = array();
        if (isset($_POST['Task_personnel'])) {
            $task_personnel = $_POST['Task_personnel'];
            $endResults['table'] = $task_personnel['table'];
            foreach($task_personnel as $tasker) {
                if (!empty($tasker['tasker'])) {
                    if(!empty($tasker['tasker']['signoff_personal'])){
                      $tasker['tasker']['signoff_personal'] = 1;
                    }else{
                      $tasker['tasker']['signoff_personal'] = 0;
                    }
                    array_push($endResults, $tasker['tasker']);
                }
                if (!empty($tasker['reviewer'])) {
                    if(!empty($tasker['reviewer']['signoff_personal'])){
                      $tasker['reviewer']['signoff_personal'] = 1;
                    }else{
                      $tasker['reviewer']['signoff_personal'] = 0;
                    }
                    array_push($endResults, $tasker['reviewer']);
                }
            }
        }
        $endTaskSetup = array();
        if (isset($_POST['Task_setup'])) {
            $temp = $_POST['Task_setup'];
            //改变为二维数组
            if (!empty($temp)) {
                foreach($temp as $v) {
                    array_push($endTaskSetup, $v);
                }
            }
        }
        $endTaskLogs = array();
        if (isset($_POST['Task_logs'])) {
            $temp = $_POST['Task_logs'];
            //改变为二维数组
            if (!empty($temp)) {
                foreach($temp as $v) {
                    array_push($endTaskLogs, $v);
                }
            }
        }
        if (!empty($endTaskSetup) && !empty($endResults) && !empty($endTaskLogs) && HenryHelper::updateManyTableArray($endTaskSetup, $endResults, $endTaskLogs)) {
            Yii::app()->user->setFlash('success', '数据更新成功！');
            $this->redirect(array(\"preparation/single\", 'rootId' => $root, 'step' => $step));
            exit();
        }
        Yii::app()->user->setFlash('success', '数据更新失败！');
        $this->redirect(array(\"preparation/single\", 'rootId' => $root, 'step' => $step));
        exit();
    }" #("$arr" 0 1 (block-side t invisible nil fontified t face default) 1 4 (block-side t invisible nil fontified t face font-lock-variable-name-face)) #("myhelper" 0 7 (block-side t fontified t face font-lock-constant-face) 7 8 (block-side t rear-nonsticky t fontified t face font-lock-constant-face)) #("return" 0 6 (fontified t face font-lock-keyword-face)) "/**
     * 功能：添加或是修改数据
     * 说明：这个是修改task_setup中得task_description
     * 和 task_logs的task_summary的方法
     * @params array
     * @return false，true
     * @author henry
     */
    public function actionUtable() {
        $root = isset($_REQUEST['rootId']) ? $_REQUEST['rootId'] : \"\";
        $step = isset($_REQUEST['step']) ? $_REQUEST['step'] : \"\";
        if (empty($root) && empty($step)) {
            Yii::app()->user->setFlash('error', '数据存在问题，联系管理员！');
            $this->redirect(array(\"preparation/index\"));
            exit();
        }
        $endResults = array();
        $task_setup = array();
        $task_logs = array();
        if (isset($_POST['Task_setup'])) {
            $task_setup = $_POST['Task_setup'];
            $task_setup['task_description'] = serialize($task_setup['update']);
            unset($taskSetup['update']);
            array_push($endResults, $task_setup);
        }
        if (isset($_POST['Task_logs'])) {
            $task_logs = $_POST['Task_logs'];
            //echo \"<pre>\";
            //var_dump( $task_logs[ 'update' ] );
            $task_logs['task_summary'] = serialize($task_logs['update']);

            unset($task_logs['update']);
            array_push($endResults, $task_logs);
        }
        //echo \"<pre>\";
        //var_dump( $task_logs );
        //exit(  );
        //update
        if (!empty($endResults) && HenryHelper::updateCommandTableArray($endResults)) {
            Yii::app()->user->setFlash('success', '数据更新成功！');
            $this->redirect(array(\"preparation/single\", 'rootId' => $root, 'step' => $step));
            exit();
        }
        Yii::app()->user->setFlash('success', '数据更新失败！');
        $this->redirect(array(\"preparation/single\", 'rootId' => $root, 'step' => $step));
        exit();
    }" #("myhelper" 0 7 (block-side t fontified t face font-lock-constant-face) 7 8 (block-side t rear-nonsticky t fontified t face font-lock-constant-face)) #("return" 0 6 (fontified t face font-lock-keyword-face)) " /***
     * 功能：修改数据( 修改表中的数据 ) task_setup  task_logs
     * @params int
     * @return null
     * @author:henry
     */
    public function actionTableupdate() {
        $root = isset($_REQUEST['rootId']) ? $_REQUEST['rootId'] : \"\";
        $step = isset($_REQUEST['step']) ? $_REQUEST['step'] : \"\";
        if (empty($root) && empty($step)) {
            Yii::app()->user->setFlash('error', '数据存在问题，联系管理员！');
            $this->redirect(array(\"preparation/index\"));
            exit();
        }

        $endResults = array();
        $arrUpdate = array();
        $setupTask = array();
        if (isset($_POST['Task_setup'])) {
            $setupTask = $_POST['Task_setup'];
            $arrUpdate = $setupTask['update'];
            $setupTask['task_description'] = serialize($setupTask['update']);
            $arr = array();
            unset($setupTask['update']);
            array_push($endResults, $setupTask);
        }
        $setupTaskLogs = array();
        if (isset($_POST['Task_logs'])) {
            $setupTaskLogs = $_POST['Task_logs'];
            if (isset($_POST['Task_logs']['update'])) {
                foreach($_POST['Task_logs']['update'] as $key => $update) {
                    if (!empty($update)) {
                        foreach($update as $keys => $vas) {
                            if (!array_key_exists(\"etlsetup_id\", $vas) && !empty($arrUpdate[$key][$keys]['etlsetup_id'])) {
                                $setupTaskLogs['update'][$key][$keys]['etlsetup_id'] = $arrUpdate[$key][$keys]['etlsetup_id'];
                            }
                            if (!array_key_exists(\"checkbox\", $vas)) {
                                $setupTaskLogs['update'][$key][$keys]['checkbox'] = \"\";
                            }
                        }
                    }

                }
            }
            $setupTaskLogs['task_summary'] = serialize($setupTaskLogs['update']);
            unset($setupTaskLogs['update']);
            array_push($endResults, $setupTaskLogs);
        }
        //echo \"<pre>\";
        //var_dump( $endResults );
        //exit(  );
        if (!empty($endResults) && HenryHelper::updateCommandTableArray($endResults)) {

            Yii::app()->user->setFlash('success', '数据更新成功！');
            $this->redirect(array(\"preparation/single\", 'rootId' => $root, 'step' => $step));
            exit();
        }
        Yii::app()->user->setFlash('success', '数据更新失败！');
        $this->redirect(array(\"preparation/single\", 'rootId' => $root, 'step' => $step));
        exit();
    }" #("$taskPersonnel" 0 1 (fontified t face default) 1 14 (fontified t face font-lock-variable-name-face)) #(" echo \"<pre>\";
                        echo \"1\";
                        var_dump($val);
                        exit();" 0 1 (fontified t c-is-sws t c-in-sws t) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 15 (fontified t) 15 39 (fontified t) 39 40 (fontified t face font-lock-keyword-face) 40 41 (fontified t face font-lock-keyword-face) 41 42 (fontified t face font-lock-keyword-face) 42 43 (fontified t face font-lock-keyword-face) 43 44 (fontified t) 44 46 (fontified t face font-lock-string-face) 46 47 (fontified t face font-lock-string-face) 47 48 (fontified t) 48 49 (fontified t) 49 73 (fontified t) 73 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t face default) 83 86 (fontified t face font-lock-variable-name-face) 86 89 (fontified t) 89 113 (fontified t) 113 114 (fontified t face font-lock-keyword-face) 114 115 (fontified t face font-lock-keyword-face) 115 116 (fontified t face font-lock-keyword-face) 116 117 (fontified t face font-lock-keyword-face) 117 120 (fontified t)) "updatepersonnel" #("$transaction" 0 1 (block-side t fontified t face default) 1 12 (block-side t fontified t face font-lock-variable-name-face)) #("$val[ 'id' ]" 0 1 (fontified t face default) 1 4 (fontified t face font-lock-variable-name-face) 4 6 (fontified t) 6 10 (fontified t face font-lock-string-face) 10 12 (fontified t)) #("id" 0 2 (fontified t face font-lock-string-face)) #("'task_personnel',$val" 0 16 (fontified t face font-lock-string-face) 16 17 (fontified t) 17 18 (fontified t face default) 18 21 (fontified t face font-lock-variable-name-face)) #("\"task_personnel\",$val" 0 1 (fontified t syntax-table (3) face font-lock-comment-face c-in-sws t) 1 15 (fontified t face font-lock-comment-face c-in-sws t) 15 16 (fontified t syntax-table (3) face font-lock-comment-face c-in-sws t) 16 17 (fontified t face font-lock-comment-face c-in-sws t) 17 18 (fontified t face font-lock-comment-face c-in-sws t) 18 21 (fontified t face font-lock-comment-face c-in-sws t)) #("$transaction = Yii::$app->db->beginTransaction();" 0 1 (block-side t fontified t face default) 1 12 (block-side t fontified t face font-lock-variable-name-face) 12 15 (block-side t fontified t) 15 18 (block-side t fontified t face font-lock-constant-face) 18 20 (block-side t fontified t) 20 21 (block-side t fontified t face default) 21 24 (block-side t fontified t face font-lock-variable-name-face) 24 26 (block-side t fontified t) 26 28 (block-side t fontified t face font-lock-variable-name-face) 28 30 (block-side t fontified t) 30 46 (block-side t fontified t face default) 46 48 (block-side t fontified t) 48 49 (block-side t rear-nonsticky t fontified t)) " /**
      * @description:这个方法只修改task_personnel表，根据id来修改数据
      * @return:false/true
      * @create:2016年04月07日14:16:11
      * @author:henry
      */
     public static function updateTask_personnel( $arr ){
                        $db = Yii::app(  )->db;
                        $transaction = $db->beginTransaction(  );
                        $command = $db->createCommand(  );
                        try{
                             if( $arr ){
                                  foreach( $arr as $key=>$val ){
                                      if(array_key_exists('id_tasklog',$val) && !empty($val['id_tasklog'])){
                                        $command->insert( \"task_personnel\",$val);
                                      }else{
                                        $command->update('task_personnel',$val,'id =:id',[ ':id'=>$val[ 'id' ] ]);
                                      }

                                  }
                             }
                             $transaction->commit(  );
                             return true;
                        }catch( Exception $e ){
                             $transaction->rollback(  );
                             return false;
                        }
                   }" #("updateTask_personnel" 0 20 (fontified t)) #("myhelper" 0 7 (block-side t fontified t face font-lock-constant-face) 7 8 (block-side t rear-nonsticky t fontified t face font-lock-constant-face)) #("return" 0 6 (fontified t face font-lock-keyword-face)) "/**
     * @description:修改task_personnel表中的数据，通过id来修改id_personnel字段
     * @author:henry
     * @create:2016年04月07日13:45:48
     *
     */
    public function actionUpdatepersonnel() {
        $root = isset($_REQUEST['rootId']) ? $_REQUEST['rootId'] : \"\";
        $step = isset($_REQUEST['step']) ? $_REQUEST['step'] : \"\";
        if (empty($root) && empty($step)) {
            Yii::app()->user->setFlash('error', '数据存在问题，联系管理员！');
            $this->redirect(array(\"preparation/index\"));
            exit();
        }

        if (isset($_REQUEST['Task_personnel'])) {
            $taskPersonnel = $_REQUEST['Task_personnel'];
            if (HenryHelper::updateTask_personnel($taskPersonnel)) {
                Yii::app()->user->setFlash('success', '数据更新成功！');
                $this->redirect(array(\"preparation/single\", 'rootId' => $root, 'step' => $step));
                exit();
            }
        }
        Yii::app()->user->setFlash('error', '数据更新失败！');
        $this->redirect(array(\"preparation/single\", 'rootId' => $root, 'step' => $step));
        exit();
    }" #("            Yii::app()->session['uid'] = $this->_user['id_personnel'];
            Yii::app()->session['auth'] = $this->_user['authority'];
            Yii::app()->session[ 'used_process' ] = $this->_user['used_process'];
" 0 12 (block-side t invisible nil c-in-sws t c-is-sws t fontified t) 12 15 (fontified t face font-lock-constant-face) 15 17 (fontified t) 17 20 (fontified t) 20 24 (fontified t) 24 31 (fontified t face font-lock-variable-name-face) 31 32 (fontified t) 32 37 (fontified t face font-lock-string-face) 37 41 (fontified t) 41 42 (block-side t fontified t face default) 42 46 (block-side t fontified t face font-lock-constant-face) 46 48 (block-side t fontified t) 48 52 (block-side t fontified t face font-lock-variable-name-face) 52 53 (block-side t rear-nonsticky t fontified t face font-lock-variable-name-face) 53 54 (fontified t) 54 68 (fontified t face font-lock-string-face) 68 71 (fontified t) 71 83 (fontified t) 83 86 (fontified t face font-lock-constant-face) 86 95 (fontified t) 95 102 (fontified t face font-lock-variable-name-face) 102 103 (fontified t) 103 109 (fontified t face font-lock-string-face) 109 113 (fontified t) 113 114 (block-side t fontified t face default) 114 118 (block-side t fontified t face font-lock-constant-face) 118 120 (block-side t fontified t) 120 124 (block-side t fontified t face font-lock-variable-name-face) 124 125 (block-side t rear-nonsticky t fontified t face font-lock-variable-name-face) 125 126 (fontified t) 126 137 (fontified t face font-lock-string-face) 137 140 (fontified t) 140 152 (fontified t) 152 155 (fontified t face font-lock-constant-face) 155 164 (fontified t) 164 171 (fontified t face font-lock-variable-name-face) 171 173 (fontified t) 173 187 (fontified t face font-lock-string-face) 187 192 (fontified t) 192 193 (block-side t fontified t face default) 193 197 (block-side t fontified t face font-lock-constant-face) 197 199 (block-side t fontified t) 199 203 (block-side t fontified t face font-lock-variable-name-face) 203 204 (block-side t rear-nonsticky t fontified t face font-lock-variable-name-face) 204 205 (fontified t) 205 219 (fontified t face font-lock-string-face) 219 220 (fontified t) 220 221 (rear-nonsticky t fontified t) 221 222 (block-side t invisible nil fontified t)) #("$this->_user" 0 1 (block-side t fontified t face default) 1 5 (block-side t fontified t face font-lock-constant-face) 5 7 (block-side t fontified t) 7 11 (block-side t fontified t face font-lock-variable-name-face) 11 12 (block-side t fontified t rear-nonsticky t face font-lock-variable-name-face)) #("id_personnel" 0 12 (fontified t face font-lock-string-face))))
